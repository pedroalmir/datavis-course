compose interoperable message app mirth designing architecture communicating application decided mirth pseudo esb process give back control user soon action fired user example pressing button filling form necessary change made database message system user doesnt wait message application gives back control database changes done message composition done background asynchronously don know approach follow start new thread app collect necessary data starting primary data primary key allow find information fill hl7 message send queue mirth listening send primary data mirth delegate hl7 message composition mirth access directly database collect necessary data option invoking rest soap service case option doubts invoke mirth app makes database modification writes primary data queue distributed transaction app makes database modification call soap rest service published mirth writing message queue mirth reading distributed transaction app argue composing message app mirth broker missusing mirth side mate find accessing app database mirth intrusive know schema option invoking app service mirth returns necessary information hl7 sending primary data app mirth back mirth calls service passing data parameter thank advice