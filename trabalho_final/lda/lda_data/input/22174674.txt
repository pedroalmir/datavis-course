hl7 v2x data modeling company work started new initiative hl7 trading v2x cda specifically messages point able accept validate acknowledge message receiving trading partner started create data model backend storage messages consideration research loss best way approach sql server currently idea essentially load data data warehouse directly integration engine biztalk foregoing backing normalized operational database set database v2x messages spec versions hl7 backward compatible store previous version database initial design table segment tie back header table guid generating storing run time biggest issue approach amount column table experience instance pv1 segment columns order accommodate possible data addition make columns varchar make big house possible customization scenario vendor planning varchar achieve columns majority probably null sparse column screams bad design fully normalizing table require ton work biztalk sql server sure gain trying pragmatic deadline fully normalized essentially create stored proc ton parameter split messages nth degree individual load smaller subtable make sure correlate back original guid maintain acid processing tricky cause overhead biztalk suppose 3rd option nhapi create objects message tie entity framework nhapi dead project experience entity framework right basically loss help industry professional experience hl7 data modeling worth extra effort fully normalize table performance sql side abysmal denormalized segment table hundreds column null row dba trying understand pitfall approach looked rimbaa hl7 rim foreign language hl7 newbie translating messages rim probably take longer complete project hoping overthinking simpler solution staring face hopefully question isn open ended