fhir migration backward compatibility system implementors face dilemma migrate version fhir started fhir moved svn revision sept incorporate bug fix suggested downloaded java code svn trunk followed direction fhir incompatibilities fhir available upgrade released version downloading noticed resource appointment trunk rev2833 release leads 1st questions trunk contain contain latest code destined release trunk release branch created trunk incompatibility code dependencies resource introduced trunk continue checkout fhir directly svn oct downloaded svn revision java code integrated code system discovered numerous compatibility issues various enum values changed lowercase uppercase patient administrativegender humanname nameuser conforming java naming convention good idea changing fundamental data type breaks compilation method name changed resulting compilation error discovered simultaneous name changes occurred example humanname class old settextsimple string settext string old settext stringtype settextelement stringtype name parameter type settext changed making migration error prone decide change method parameter resourcereference resource type changed class name fhir model package occurences resourcereference file affected changes rippled fhir package changes ripple application code database schema notice new resources rev3218 trunk code newbundle previously suggested bundles resource great change trunk backward compatible releas sure support old new way parsing composing json xml bundle put finer point thing important recognize fhir changes affect compilation easily introduce subtle bugs runtime addition fhir changes require database schema changes data migration application example application saves json resource streams database simple changing enum value male male requires migration utility update existing database content going investing heavily fhir succeed adopted widely standard order occur issues backward compatibility version migration addressed vain light shed following question move purpose line code target user purpose code trunk target user users expected migrate trunk codebase migration strategy address incompatibilty codebas deprecation policy code codebase level backward compatibility expected revision revision code trunk fhir roadmap system developer plan development cycle thanks rich