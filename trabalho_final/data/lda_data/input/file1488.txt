company work started new initiative trading cda specifically messages point able accept validate acknowledge messages receiving trading partners started create data model backend storage messages consideration research loss best way approach sql server currently idea essentially load data data warehouse directly integration engine biztalk foregoing backing normalized operational database set database messages specs versions backward compatible store previous versions database initial design table segment tie back header table guid generating storing run time biggest issue approach amount columns table experience instance segment columns order accommodate possible data addition make columns varchar make big house possible customization scenario vendors planning varchar achieve columns majority probably null sparse columns screams bad design fully normalizing tables require ton work biztalk sql server sure gain trying pragmatic deadline fully normalized essentially create stored procs ton parameters split messages nth degree individual loads smaller subtables make sure correlate back original guid maintain acid processing tricky cause overhead biztalk suppose option nhapi create objects messages tie entity framework nhapi dead project experience entity framework right basically loss help industry professionals experience data modeling worth extra effort fully normalize tables performance sql side abysmal denormalized segment tables hundreds columns null row dba trying understand pitfalls approach looked rimbaa rim foreign language newbie translating messages rim probably take longer complete project hoping overthinking simpler solution staring face hopefully question isn open ended
