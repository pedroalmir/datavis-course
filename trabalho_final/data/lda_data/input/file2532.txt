designing architecture communicating applications decided mirth pseudo esb processes give back control users soon action fired user example pressing button filling form necessary changes made database message system user doesnt wait message applications gives back control database changes done message composition done background asynchronously donÂ´really know approach follow start new thread app collect necessary data starting primary data primary keys allow find information fill message send queue mirth listening send primary data mirth delegate message composition mirth access directly database collect necessary data option invoking rest soap services case option doubts invoke mirth app makes database modifications writes primary data queue distributed transaction app makes database modifications call soap rest service published mirth writing message queue mirth reading distributed transaction app argue composing message app mirth broker missusing mirth side mates find accessing app database mirth intrusive know schema option invoking app service mirth returns necessary information sending primary data app mirth back mirth calls service passing data parameter thank advices
