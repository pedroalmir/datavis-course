system implementors face dilemma migrate version fhir started fhir moved svn revision sept incorporate bug fix suggested downloaded java code svn trunk followed directions fhir build process page fhir incompatibilities fhir available upgrade released version downloading noticed resources appointment trunk rev release leads questions trunk contain contain latest code destined release trunk release branch created trunk incompatibilities code dependencies resources introduced trunk continue checkout fhir directly svn oct downloaded svn revision java code integrated code system discovered numerous compatibility issues various enum values changed lowercase uppercase patient administrativegender humanname nameuser conforming java naming convention good idea changing fundamental data types breaks compilation method names changed resulting compilation errors discovered simultaneous name changes occurred example humanname class old settextsimple string settext string old settext stringtype settextelement stringtype name parameter type settext changed making migration error prone decide change method parameter resourcereference resource type changed class name fhir model package occurences resourcereference file affected changes rippled fhir packages changes ripple application code database schemas notice new resources rev trunk code newbundle previously suggested bundles resources great change trunk backward compatible releases sure support old new way parsing composing json xml bundles put finer point things important recognize fhir changes affect compilation easily introduce subtle bugs runtime addition fhir changes require database schema changes data migration applications example application saves json resource streams database simple changing enum value male male requires migration utilities update existing database content going investing heavily fhir succeed adopted widely standard order occur issues backward compatibility version migration addressed vain light shed following question move purpose line code target users purpose code trunk target users users expected migrate trunk codebase migration strategy address incompatibilties codebases deprecation policy code codebase level backward compatibility expected revision revision code trunk fhir roadmap system developers plan development cycles thanks rich
