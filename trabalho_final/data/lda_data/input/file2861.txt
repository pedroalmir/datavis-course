pretty complex biztalk interface uses accelerator canonical schema contain types transactions main patient administration system map messages target application orchestration uses scripting shape call map dynamically based type transaction received criteria different maps called share common segments example map patient identification data pid segment pid mapping done single scripting functoid inline xslt asked done way answer given pid segment multiple maps update mapping simply copy paste xslt maps fiddling separate functoids found bug pid mapping fix xslt map copy maps time consuming completely goes dry principle way biztalk sharing xslt multiple maps specify call multiple times
